continue
demand.explanations.map {|expl| expl.answered?}.count(false)
demand.explanations[1].answered?
demand.explanations[0].answered?
demand.explanations
demand
continue
exit
demand.explanations[1].answered?
demand.explanations.first.answered?
demand.explanations.map {|expl| expl.answered?}.any?
demand.have_explanations_without_answer?
demand.explanations
demand.explarations
demand
exit
user.supplier?
user.active_profile.accreditation.accept_as_supplier
user.active_profile
user.active_profile.accreditation.state
profile.accreditation.state
profile.
profile.accreditation.accept_as_supplier
user.active_profile_id = profile.id
profile = user.organization_account.organization_profiles.first
exit
user.organization_account.organization_profiles.first.accreditation.accept_as_supplier!
user.organization_account.organization_profiles.first.accreditation.accept_as_supplier
user.organization_account.organization_profiles.first.id
user.organization_account.organization_profiles.first.accreditation.state
user.organization_account.organization_profiles.first.accreditation.state = 'supplier'
user.organization_account.organization_profiles.first.accreditation.state
user.organization_account.organization_profiles.first
user.organization_account.organization_profiles
user.active_profile_id
user.active_account
exit
user.organization_account.organization_profiles
user.organization_account
exit
user.organization_account.organization_profiles
user.organization_account
user.profiles
user
continue
params[:demand][:competence_ids]
params[competence_ids]
params["competence_ids"]
params[:competence_ids]
params
params[:competence_ids]
continue
demand_params
continue
question_id
@demand.explanations
@demand.explanations.last
@demand.explanations.last.id
locals
continue
@demand.explanations.last.id
@demand.explanations.last
cnt
continue
@demand.explanations.last
@demand.explanations
@demand
current_user.customer?
cnt
co
current_user.active_profile.explanations.count
current_user.active_profile.explanations
cnt
continue
continue\
continue
@current_user
@explanation
continue
Explanation.new
continue
@explanation.class
@explanation.count
@explanation
continue
@explanation
@demand
continue
@explanation
@explanation.account
@explanation.first.demand
@explanation.demand
@explanation.account
@explanation
@current_user
continue
var instance
continue
debug
var instance
continue
var instance
var all
continue
